// <auto-generated />
using System;
using CashFlow.DataBase.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CashFlow.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240827193436_IncomenRelation")]
    partial class IncomenRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CashFlow.DataBase.Entities.BudgetEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MoneyId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName");

                    b.HasIndex("MoneyId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.CategoryEntiy", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Caterogies");

                    b.HasData(
                        new
                        {
                            Name = "Comida y Bebida"
                        },
                        new
                        {
                            Name = "Compras"
                        },
                        new
                        {
                            Name = "Vivienda"
                        },
                        new
                        {
                            Name = "Transporte"
                        },
                        new
                        {
                            Name = "Vehiculos"
                        },
                        new
                        {
                            Name = "Vida y entretenimiento"
                        },
                        new
                        {
                            Name = "Comunicaciones"
                        },
                        new
                        {
                            Name = "Gastos financieros"
                        },
                        new
                        {
                            Name = "Inversiones"
                        },
                        new
                        {
                            Name = "Trabajo"
                        },
                        new
                        {
                            Name = "Otros"
                        });
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.ExpenseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int?>("BudgetId")
                        .HasColumnType("integer");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MoneyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("CategoryName");

                    b.HasIndex("MoneyId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.IncomeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MoneyId")
                        .HasColumnType("integer");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MoneyId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.MoneyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Rest")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Moneys");
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.BudgetEntity", b =>
                {
                    b.HasOne("CashFlow.DataBase.Entities.CategoryEntiy", "Category")
                        .WithMany("budgets")
                        .HasForeignKey("CategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CashFlow.DataBase.Entities.MoneyEntity", "Money")
                        .WithMany("Budgets")
                        .HasForeignKey("MoneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Money");
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.ExpenseEntity", b =>
                {
                    b.HasOne("CashFlow.DataBase.Entities.BudgetEntity", "Budget")
                        .WithMany("expenses")
                        .HasForeignKey("BudgetId");

                    b.HasOne("CashFlow.DataBase.Entities.CategoryEntiy", "Category")
                        .WithMany("expenses")
                        .HasForeignKey("CategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CashFlow.DataBase.Entities.MoneyEntity", "Money")
                        .WithMany("Expenses")
                        .HasForeignKey("MoneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");

                    b.Navigation("Category");

                    b.Navigation("Money");
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.IncomeEntity", b =>
                {
                    b.HasOne("CashFlow.DataBase.Entities.MoneyEntity", "Money")
                        .WithMany("Incomes")
                        .HasForeignKey("MoneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Money");
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.MoneyEntity", b =>
                {
                    b.HasOne("CashFlow.DataBase.Entities.UserEntity", "User")
                        .WithOne("TotalMoney")
                        .HasForeignKey("CashFlow.DataBase.Entities.MoneyEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.BudgetEntity", b =>
                {
                    b.Navigation("expenses");
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.CategoryEntiy", b =>
                {
                    b.Navigation("budgets");

                    b.Navigation("expenses");
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.MoneyEntity", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Expenses");

                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("CashFlow.DataBase.Entities.UserEntity", b =>
                {
                    b.Navigation("TotalMoney")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
